services:
  api:
    image: api:0.0.1
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - service-db
    environment:
      - SERVER_PORT= 8181
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db/monitorSensors_DB
  service-db:
    image: postgres:16.4
    environment:
      POSTGRES_USER: monitorServiceUser
      POSTGRES_PASSWORD: monitorServiceDBpass
      POSTGRES_DB: monitorSensors_DB
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - '5432:5432'
    volumes:
      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:9
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: adminPG@admin.com
      PGADMIN_DEFAULT_PASSWORD: adminPG_pass
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
volumes:
  db-data:
  pgadmin-data: